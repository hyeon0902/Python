# 리스트 특정 값의 인덱스 구하기

# index(값)

# 리스트 특정 값의 인덱스를 구함
# 같은 값이 두개 이상이면 첫 번째 인덱스 반환
# 없는 값을 넣으면 에러 발생

a = [1,2,3,1]
print(a.index(1))

# 리스트 특정 값의 개수

# count(값)

# 특정 값의 개수를 알려준다.
# 없으면 0을 돌려줌.

a = [1,2,3,1]

print(a.count(1))
print(a.count(4))

# 리스트의 순서 뒤집기

# reverse() : 리스트에서 요소의 순서를 역순으로 만들어 줌

a = [1, 2, 3, 4, 5]

a.reverse()
print(a)

# 리스트 요소 정렬

# sort() : 리스트의 요소를 오름차순으로 정렬
# 내림차순하고 싶으면 sort(reverse=True)

a = [3, 2, 6, 4, 1]

a.sort()
print(a)               # [1,2,3,4,6]

a.sort(reverse=True)   # [6,4,3,2,1]
print(a)

# 리스트의 모든 요소 삭제

# clear() : 리스트의 모든 요소를 삭제하고 빈 리스트 [] 가 됨

a = [1, 2, 3]

a.clear()
print(a)

# 리스트의 복사

# copy() : 리스트를 복사해서 또 다른 리스트를 만든다.
# 또 다른 리스트 -> 값은 같지만 다른 리스트 ( 깊은 복사 )

a = [1,2,3]
b = a.copy()
print(b)

# 리스트 복사는 다음과 같이 해도 된다. (얕은 복사)

a = [1,2,3]
b = a
print(b)

a[0] = 100

# 참조 (Reference)
# 객체가 메모리에 생기면, 그 객체가 어디 있는지 아는것
# 여기서는 [1, 2, 3] 이라는 리스트 객체가 하나 생기고
# 변수 a 가 그 리스트가 어디 있는지 참조하고 있다.

a = [1, 2, 3]

# 참조 값 복사
# 복사된 값도 원래의 같은 객체를 참조하게 됨
a = [1, 2, 3]
b = a
# 얕은 복사 이해 하기
a = [1, 2, 3]
b = a

b[0] = 100
print(a)

# 리스트 깊은 복사
# 리스트를 복사해서 또 다른 리스트를 만든다

a = [1, 2, 3]
b = a.copy()

b[0] = 100
print(a)
print(b)